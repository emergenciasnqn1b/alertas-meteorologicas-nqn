name: Alertas Meteorol√≥gicas Neuqu√©n

on:
  schedule:
    - cron: '*/15 * * * *'  # Cada 15 minutos
  workflow_dispatch:

jobs:
  verificar-alertas:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v3

      - name: Instalar dependencias
        run: pip install feedparser

      - name: Verificar alertas y enviar mail
        env:
          GMAIL_USER: ${{ secrets.GMAIL_USER }}
          GMAIL_PASS: ${{ secrets.GMAIL_PASS }}
          MI_CORREO: ${{ secrets.GMAIL_USER }}
        run: |
          python <<EOF
          import feedparser
          import smtplib
          import os
          from email.message import EmailMessage

          zonas_neuquen = [
              "Alumin√©", "Andacollo", "Chapelco", "Chos Malal",
              "Las Lajas", "Loncopu√©", "Jun√≠n de los Andes", "San Mart√≠n de los Andes"
          ]

          feed = feedparser.parse("https://www.smn.gob.ar/alertas/rss")
          alertas_detectadas = []

          for zona in zonas_neuquen:
              for entrada in feed.entries:
                  if zona.lower() in entrada.title.lower():
                      alertas_detectadas.append(f"- {zona}: {entrada.title}\n{entrada.link}\n")

          if alertas_detectadas:
              mensaje = EmailMessage()
              mensaje["Subject"] = "üö® Alertas Meteorol√≥gicas Detectadas"
              mensaje["From"] = os.environ["GMAIL_USER"]
              mensaje["To"] = os.environ["MI_CORREO"]
              mensaje.set_content("Se detectaron las siguientes alertas:\n\n" + "\n".join(alertas_detectadas))

              with smtplib.SMTP_SSL("smtp.gmail.com", 465) as smtp:
                  smtp.login(os.environ["GMAIL_USER"], os.environ["GMAIL_PASS"])
                  smtp.send_message(mensaje)
          else:
              print("No se detectaron alertas meteorol√≥gicas.")
          EOF
